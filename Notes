              ## Variables ##

* Remember variables names can contain only letter, numbers and underscores. Don't start with a number.

* Don't have any space in your variable names, however, you can use underscore in your variable names.

* Don't use python keywords and function names as your variable names.

* Keep them clear and descriptive as much as possible.

* A name error usually means  we either forgot to set a variable's value before using it, or we made a spelling mistake when entering the variable's name.

# The best way to understand new programming concepts is to try using them in your programs.

             ## Strings ##

* Strings are simply a series of characters. Anything inside quotes is considered a string in python and you can use single or double quotes around your strings.

* You can Concatenate two string values together. To do that you can use '+' to combine things.

* You can use concatenation to compose a message and then store the entire message in a variable.

            ## Methods ##
* A method is an action that python can perform on a piece of data.

* Every method is followed by a set of parentheses, because methods often needs additional information to do their work. That additional information is usually provided inside that parenthesis.

Concatenating = The action of putting linking or putting two things together.

* To add a little bit of indentation in your text you can include "\t" in your message and it'll add a little bit of gap in your text.

* To add a new line in your text you can do so by adding \n in your text.

* To ensure that no whitespace exists at the right end of a string, use the rstrip() method to get rid of space in the right side. Then you can do lstrip() to get rid of extra space from the left side. You can call the strip() method at the end to get rid of extra space from both sides in your string values.

* if you have to use an apostrophe inside your string, make sure to use "" as the opening and closing of your string or else you'll confuse python and it won't know when the string is starting or ending.

            ## Numbers in python ##
* Python treats numbers in several different ways, depending on how they are being used.

* Python calls any number with a decimal point a float.

* When you use integar within strings, you need to specify explicitly that you want python to use the integar as a string of characters. You can do this by wrapping the variable in the str() function, which tells python to represent non-string values as strings.
